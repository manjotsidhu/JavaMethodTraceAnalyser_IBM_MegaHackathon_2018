/*
 * Copyright 2018 Manjot Sidhu <manjot.techie@gmail.com>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.github.manjotsidhu.methodtraceanalyser;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ui.UIUtils;

/**
 * Final product of Method Trace Analyser
 *
 * @author Manjot Sidhu
 */
public class Main extends javax.swing.JFrame {

    Analyser analyse;
    File[] logFiles;
    DefaultListModel<File> filesList = new DefaultListModel<>();
    File SampleLogFilesFolder = new File("./sample_logs");
    CodeFlow leftFrame;
    CodeFlow rightFrame;

    /**
     * Creates new form MainAlt
     */
    public Main() {
        initComponents();
        //resetInputForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        GUI_main_panel = new javax.swing.JPanel();
        jTabbedPaneMain = new javax.swing.JTabbedPane();
        jPanel_tab_home = new javax.swing.JPanel();
        jPanel5_main = new javax.swing.JPanel();
        jPanel_browse = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        browseBtn = new javax.swing.JButton();
        jPanel_listing_files = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2_text = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jList_listOfFiles = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel_InputForm_buttons = new javax.swing.JPanel();
        resetBtn = new javax.swing.JButton();
        analyseBtn = new javax.swing.JButton();
        jPanel_tab_CodeFlowGraphicalview = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPaneListRight = new javax.swing.JScrollPane();
        jListRight = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListLeft = new javax.swing.JList<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1Right = new javax.swing.JLabel();
        jPanel_tab_MethodTimeInvocation = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel_graph_timeInvocation = new javax.swing.JPanel();
        jPanel_tab_MethodExecutionNumberOfTimes = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel_graph_executedNumberOfTimes = new javax.swing.JPanel();
        jPanel_tab_Anomalies = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        GUI_top_panel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        GUI_bottom_text = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Method Trace Analyser");
        setIconImages(null);
        setName("AppGUI"); // NOI18N
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        GUI_main_panel.setLayout(new java.awt.BorderLayout());

        jTabbedPaneMain.setMaximumSize(null);
        jTabbedPaneMain.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPaneMainStateChanged(evt);
            }
        });

        jPanel_tab_home.setName(""); // NOI18N
        jPanel_tab_home.setLayout(new java.awt.GridBagLayout());

        jPanel5_main.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5_main.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Please click on browse button to select log file(s) which you want to analyse");
        jLabel1.setToolTipText("");
        jPanel_browse.add(jLabel1);

        browseBtn.setText("Browse...");
        browseBtn.setToolTipText("Click to browse and select log files");
        browseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBtnActionPerformed(evt);
            }
        });
        jPanel_browse.add(browseBtn);

        jPanel5_main.add(jPanel_browse, new java.awt.GridBagConstraints());

        jPanel_listing_files.setRequestFocusEnabled(false);
        jPanel_listing_files.setLayout(new java.awt.GridBagLayout());

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        jPanel_listing_files.add(jPanel6, gridBagConstraints);

        jLabel2_text.setText("List of selected files to analyse");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel_listing_files.add(jLabel2_text, gridBagConstraints);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        jPanel_listing_files.add(jPanel7, gridBagConstraints);

        jList_listOfFiles.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jList_listOfFiles.setMaximumSize(null);
        jList_listOfFiles.setMinimumSize(null);
        jList_listOfFiles.setName(""); // NOI18N
        jList_listOfFiles.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        jPanel_listing_files.add(jList_listOfFiles, gridBagConstraints);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        jPanel_listing_files.add(jPanel5, gridBagConstraints);

        jPanel8.setMaximumSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel_listing_files.add(jPanel8, gridBagConstraints);

        jPanel9.setMaximumSize(null);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel_listing_files.add(jPanel9, gridBagConstraints);

        jPanel10.setMaximumSize(null);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel_listing_files.add(jPanel10, gridBagConstraints);

        jPanel11.setMaximumSize(null);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel_listing_files.add(jPanel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel5_main.add(jPanel_listing_files, gridBagConstraints);

        resetBtn.setText("Clear");
        resetBtn.setToolTipText("To clear all files from selection");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });
        jPanel_InputForm_buttons.add(resetBtn);

        analyseBtn.setText("Analyse");
        analyseBtn.setName("analyseBtn"); // NOI18N
        analyseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyseBtnActionPerformed(evt);
            }
        });
        jPanel_InputForm_buttons.add(analyseBtn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel5_main.add(jPanel_InputForm_buttons, gridBagConstraints);

        jPanel_tab_home.add(jPanel5_main, new java.awt.GridBagConstraints());

        jTabbedPaneMain.addTab("Input trace logs", jPanel_tab_home);

        jSplitPane1.setDividerLocation(330);
        jSplitPane1.setDividerSize(7);

        jListRight.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListRight.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListRight.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListRightValueChanged(evt);
            }
        });
        jScrollPaneListRight.setViewportView(jListRight);

        jListLeft.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListLeft.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListLeft.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListLeftValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(jListLeft);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Graphical view of code flow to compare");
        jPanel4.add(jLabel9);

        jLabel10.setText("Select first file to show and compare");

        jLabel1Right.setText("Select second file to show and compare");

        javax.swing.GroupLayout jPanel_tab_CodeFlowGraphicalviewLayout = new javax.swing.GroupLayout(jPanel_tab_CodeFlowGraphicalview);
        jPanel_tab_CodeFlowGraphicalview.setLayout(jPanel_tab_CodeFlowGraphicalviewLayout);
        jPanel_tab_CodeFlowGraphicalviewLayout.setHorizontalGroup(
            jPanel_tab_CodeFlowGraphicalviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_tab_CodeFlowGraphicalviewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_tab_CodeFlowGraphicalviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel_tab_CodeFlowGraphicalviewLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 181, Short.MAX_VALUE)
                        .addComponent(jScrollPaneListRight, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_tab_CodeFlowGraphicalviewLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1Right)))
                .addContainerGap())
        );
        jPanel_tab_CodeFlowGraphicalviewLayout.setVerticalGroup(
            jPanel_tab_CodeFlowGraphicalviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_tab_CodeFlowGraphicalviewLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_tab_CodeFlowGraphicalviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel1Right))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_tab_CodeFlowGraphicalviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPaneListRight, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE))
        );

        jTabbedPaneMain.addTab("Code flow graphical view", jPanel_tab_CodeFlowGraphicalview);

        jPanel_tab_MethodTimeInvocation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Method time invocation");
        jPanel12.add(jLabel2);

        jLabel3.setText("Showing time in milliseconds.");
        jPanel13.add(jLabel3);

        jPanel2.setMaximumSize(null);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setMaximumSize(null);
        jTable1.setMinimumSize(null);
        jTable1.setName(""); // NOI18N
        jTable1.setPreferredSize(null);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Data table", jPanel19);

        javax.swing.GroupLayout jPanel_graph_timeInvocationLayout = new javax.swing.GroupLayout(jPanel_graph_timeInvocation);
        jPanel_graph_timeInvocation.setLayout(jPanel_graph_timeInvocationLayout);
        jPanel_graph_timeInvocationLayout.setHorizontalGroup(
            jPanel_graph_timeInvocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 670, Short.MAX_VALUE)
        );
        jPanel_graph_timeInvocationLayout.setVerticalGroup(
            jPanel_graph_timeInvocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Show graph", jPanel_graph_timeInvocation);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout jPanel_tab_MethodTimeInvocationLayout = new javax.swing.GroupLayout(jPanel_tab_MethodTimeInvocation);
        jPanel_tab_MethodTimeInvocation.setLayout(jPanel_tab_MethodTimeInvocationLayout);
        jPanel_tab_MethodTimeInvocationLayout.setHorizontalGroup(
            jPanel_tab_MethodTimeInvocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel_tab_MethodTimeInvocationLayout.setVerticalGroup(
            jPanel_tab_MethodTimeInvocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_tab_MethodTimeInvocationLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneMain.addTab("Method time invocation", jPanel_tab_MethodTimeInvocation);

        jPanel_tab_MethodExecutionNumberOfTimes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Method executed number of times");
        jPanel14.add(jLabel4);

        jLabel6.setText("Showing counts how many times each method is executed");
        jPanel15.add(jLabel6);

        jPanel3.setMaximumSize(null);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.setMaximumSize(null);
        jTable2.setMinimumSize(null);
        jTable2.setName(""); // NOI18N
        jTable2.setPreferredSize(null);
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Data table", jPanel20);

        javax.swing.GroupLayout jPanel_graph_executedNumberOfTimesLayout = new javax.swing.GroupLayout(jPanel_graph_executedNumberOfTimes);
        jPanel_graph_executedNumberOfTimes.setLayout(jPanel_graph_executedNumberOfTimesLayout);
        jPanel_graph_executedNumberOfTimesLayout.setHorizontalGroup(
            jPanel_graph_executedNumberOfTimesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 670, Short.MAX_VALUE)
        );
        jPanel_graph_executedNumberOfTimesLayout.setVerticalGroup(
            jPanel_graph_executedNumberOfTimesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Show graph", jPanel_graph_executedNumberOfTimes);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        javax.swing.GroupLayout jPanel_tab_MethodExecutionNumberOfTimesLayout = new javax.swing.GroupLayout(jPanel_tab_MethodExecutionNumberOfTimes);
        jPanel_tab_MethodExecutionNumberOfTimes.setLayout(jPanel_tab_MethodExecutionNumberOfTimesLayout);
        jPanel_tab_MethodExecutionNumberOfTimesLayout.setHorizontalGroup(
            jPanel_tab_MethodExecutionNumberOfTimesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel_tab_MethodExecutionNumberOfTimesLayout.setVerticalGroup(
            jPanel_tab_MethodExecutionNumberOfTimesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_tab_MethodExecutionNumberOfTimesLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneMain.addTab("Method executed number of times", jPanel_tab_MethodExecutionNumberOfTimes);

        jPanel_tab_Anomalies.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Anomalies");
        jPanel16.add(jLabel7);

        jLabel8.setText("Showing anomalies");
        jPanel17.add(jLabel8);

        jPanel18.setMaximumSize(null);

        jScrollPane3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable3.setMaximumSize(null);
        jTable3.setMinimumSize(null);
        jTable3.setName(""); // NOI18N
        jTable3.setPreferredSize(null);
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel_tab_AnomaliesLayout = new javax.swing.GroupLayout(jPanel_tab_Anomalies);
        jPanel_tab_Anomalies.setLayout(jPanel_tab_AnomaliesLayout);
        jPanel_tab_AnomaliesLayout.setHorizontalGroup(
            jPanel_tab_AnomaliesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel_tab_AnomaliesLayout.setVerticalGroup(
            jPanel_tab_AnomaliesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_tab_AnomaliesLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneMain.addTab("Anomalies", jPanel_tab_Anomalies);

        GUI_main_panel.add(jTabbedPaneMain, java.awt.BorderLayout.CENTER);

        GUI_top_panel.setLayout(new java.awt.GridBagLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Method Trace Analyser");
        jPanel1.add(jLabel5);

        GUI_top_panel.add(jPanel1, new java.awt.GridBagConstraints());

        GUI_main_panel.add(GUI_top_panel, java.awt.BorderLayout.PAGE_START);

        GUI_bottom_text.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        GUI_bottom_text.setText("  Designed and developed by team : JavaMonks, CHRIST (Deemed to be University), Bengaluru, INDIA");
        GUI_main_panel.add(GUI_bottom_text, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(GUI_main_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(GUI_main_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBtnActionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == browseBtn) {
            // File Chooser (Browse Tab)

            JFileChooser chooser = new JFileChooser();
            chooser.setMultiSelectionEnabled(true);
            chooser.setCurrentDirectory(SampleLogFilesFolder);
            int result = chooser.showOpenDialog(GUI_main_panel);
            if (result != JFileChooser.APPROVE_OPTION) {
                return;
            }
            logFiles = chooser.getSelectedFiles();
            filesList = new DefaultListModel<>();
            boolean isFileSelected = false;
            for (File file : logFiles) {
                filesList.addElement(file);
                isFileSelected = true;
            }
            if (isFileSelected) {
                analyseBtn.setEnabled(true);
                updateFormOnFilesSelected();
            }

        }
    }//GEN-LAST:event_browseBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        resetInputForm();

    }//GEN-LAST:event_resetBtnActionPerformed

    private void analyseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyseBtnActionPerformed
        try {
            analyse = new Analyser(logFiles);
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

        /*
        String arrData[][] = {{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                ,{"Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300","Vinod","100","Raju","200","Ranju","300"}                
                           
        };
        
        String arrHeadings[] = {"Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code","Name","code"};
        String arrHeadingTooltips[] = {"Name","code"};
         */
        // tab-1 values
        Object[][] arrData1 = Tools.toArray(analyse.getAnalysedTime(), (Integer) ((ArrayList) analyse.getAnalysedTime().get(0)).size());
        Object[] arrHeadings1 = (Object[]) analyse.getLogFiles().toArray();
        Object[] arrHeadingTooltips1 = (Object[]) analyse.getLogFiles().toArray();
        graphicalViewTab(jTable1, arrData1, arrHeadings1, arrHeadingTooltips1);
        // tab-2 values
        Object[][] arrData2 = Tools.toArray(analyse.getanalysedNMethods(), (Integer) ((ArrayList) analyse.getanalysedNMethods().get(0)).size());
        Object[] arrHeadings2 = (Object[]) analyse.getLogFiles().toArray();
        Object[] arrHeadingTooltips2 = (Object[]) analyse.getLogFiles().toArray();
        graphicalViewTab(jTable2, arrData2, arrHeadings2, arrHeadingTooltips2);
        // tab-3 values

        ArrayList anomaliesLogFiles = new ArrayList();
        anomaliesLogFiles.add("Anomaly Type");
        anomaliesLogFiles.add("Method Starting");
        anomaliesLogFiles.add("");
        Object[][] arrData3 = Tools.toArray(analyse.getAnomalies(), (Integer) ((ArrayList) analyse.getAnomalies().get(0)).size());
        Object[] arrHeadings3 = (Object[]) anomaliesLogFiles.toArray();
        Object[] arrHeadingTooltips3 = (Object[]) analyse.getLogFiles().toArray();
        graphicalViewTab(jTable3, arrData3, arrHeadings3, arrHeadingTooltips3);
        // tab-4 code flow compare graph

        Object[] graphLogFiles = (Object[]) analyse.getLogFiles().toArray();
        ArrayList flowLogFiles = analyse.getLogFiles();
        //System.out.println(Arrays.deepToString(flowLogFiles.toArray()));
        flowLogFiles.remove(0);

        Object[] arrHeadings4 = (Object[]) flowLogFiles.toArray();
        DefaultListModel model4 = new DefaultListModel();
        jListLeft.removeAll();
        jListLeft.clearSelection();
        jListLeft.setModel(model4);
        for (int index = 0; index < arrHeadings4.length; index++) {
            model4.add(index, arrHeadings4[index]);
        }

        Object[] arrHeadings5 = (Object[]) flowLogFiles.toArray();
        DefaultListModel model5 = new DefaultListModel();
        jListRight.removeAll();
        jListRight.clearSelection();
        jListRight.setModel(model5);
        for (int index = 0; index < arrHeadings5.length; index++) {
            model5.add(index, arrHeadings5[index]);
        }

        int leftIndex = 0;
        jListLeft.setSelectedIndex(leftIndex);
        ArrayList text1 = (ArrayList) (((ArrayList) analyse.getLogText()).get(leftIndex));
        ArrayList sequence1 = (ArrayList<Integer>) (((ArrayList) analyse.getLogSequence()).get(leftIndex));
        leftFrame.removeAll();
        try {
            leftFrame = new CodeFlow(text1, sequence1, (String) arrHeadings5[leftIndex]);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        jSplitPane1.setLeftComponent(leftFrame);
        leftFrame.updateUI();
        leftFrame.setVisible(true);

        int rightIndex = 0;
        if (arrHeadings5.length > 1) {
            rightIndex = 1;
        }

        jListRight.setSelectedIndex(rightIndex);
        ArrayList text2 = (ArrayList) (((ArrayList) analyse.getLogText()).get(rightIndex));
        ArrayList sequence2 = (ArrayList<Integer>) (((ArrayList) analyse.getLogSequence()).get(rightIndex));
        rightFrame.removeAll();
        try {
            rightFrame = new CodeFlow(text2, sequence2, (String) arrHeadings5[rightIndex]);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        jSplitPane1.setRightComponent(rightFrame);
        rightFrame.updateUI();
        rightFrame.setVisible(true);

        if (arrHeadings5.length > 1) {
            rightFrame.setVisible(true);
            jListRight.setVisible(true);
            jLabel1Right.setVisible(true);
            jScrollPaneListRight.setVisible(true);
        } else {
            rightFrame.setVisible(false);
            jListRight.setVisible(false);
            jLabel1Right.setVisible(false);
            jScrollPaneListRight.setVisible(false);
        }

        // Time Invocation Graph
        TimeInvocationGraph chart;
        try {
            //System.out.println(Arrays.deepToString(analyse.getLogFiles().toArray()));
            chart = new TimeInvocationGraph("Method Time Invocation",
                    "Method Time Invocation", graphLogFiles, analyse.getAnalysedTime());
            chart.pack();
            chart.setMaximizable(true);
            jPanel_graph_timeInvocation.add(chart);
            chart.setVisible(true);

        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Number of times Methods Executed Graph
        MethodsGraph chart1;
        try {
            chart1 = new MethodsGraph("Number of Times Method executed",
                    "Number of Times Method executed", graphLogFiles, analyse.getanalysedNMethods());
            chart1.pack();
            chart1.setMaximizable(true);
            jPanel_graph_executedNumberOfTimes.add(chart1);
            chart1.setVisible(true);

        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

        //
        jTabbedPaneMain.setEnabledAt(1, true);
        jTabbedPaneMain.setEnabledAt(2, true);
        jTabbedPaneMain.setEnabledAt(3, true);
        jTabbedPaneMain.setEnabledAt(4, true);
        splitPaneSplitRefresh();
        analyseBtn.setEnabled(false);
    }//GEN-LAST:event_analyseBtnActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:

    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        resetInputForm();
    }//GEN-LAST:event_formWindowOpened

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        jSplitPane1.setDividerLocation(jSplitPane1.getWidth() / 2);
    }//GEN-LAST:event_formComponentResized
    private void splitPaneSplitRefresh() {
        jSplitPane1.setDividerLocation(jSplitPane1.getWidth() / 2);
    }
    private void jListLeftValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListLeftValueChanged

        int index = jListLeft.getSelectedIndex();
        if (index < 0) {
            return;
        }
        //System.out.println(index);
        //System.out.println(Arrays.deepToString(analyse.getLogText().toArray()));
        ArrayList text = (ArrayList) (((ArrayList) analyse.getLogText()).get(index));
        ArrayList sequence = (ArrayList<Integer>) (((ArrayList) analyse.getLogSequence()).get(jListLeft.getSelectedIndex()));
        try {
            leftFrame = new CodeFlow(text, sequence, jListLeft.getSelectedValue());
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        jSplitPane1.setLeftComponent(leftFrame);
        leftFrame.setVisible(true);
        splitPaneSplitRefresh();
    }//GEN-LAST:event_jListLeftValueChanged

    private void jListRightValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListRightValueChanged
        int index = jListRight.getSelectedIndex();
        if (index < 0) {
            return;
        }
        ArrayList text = (ArrayList) (((ArrayList) analyse.getLogText()).get(index));
        ArrayList sequence = (ArrayList<Integer>) (((ArrayList) analyse.getLogSequence()).get(jListRight.getSelectedIndex()));
        try {
            rightFrame = new CodeFlow(text, sequence, jListRight.getSelectedValue());
        } catch (Exception ex) {
            rightFrame.removeAll();
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        jSplitPane1.setRightComponent(rightFrame);
        rightFrame.setVisible(true);
        splitPaneSplitRefresh();
    }//GEN-LAST:event_jListRightValueChanged

    private void jTabbedPaneMainStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPaneMainStateChanged
        // TODO add your handling code here:
        splitPaneSplitRefresh();
    }//GEN-LAST:event_jTabbedPaneMainStateChanged

    private void graphicalViewTab(JTable jTableObj, Object[][] arrData, Object[] arrHeadings, Object[] arrHeadingTooltips) {
        // jPanel_Tab_TabularGraphicView.setEnabled(true);   
        DefaultTableModel model = new DefaultTableModel(arrData, arrHeadings) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTableObj.setModel(model); //= new JTable(model);
    }

    private void resetInputForm() {

        filesList.clear();
        jList_listOfFiles.removeAll();
        jListLeft.removeAll();
        jListRight.removeAll();
        analyseBtn.setEnabled(false);
        resetBtn.setEnabled(false);
        jPanel_listing_files.setVisible(false);
        jPanel_InputForm_buttons.setVisible(false);
        browseBtn.setEnabled(true);
        jPanel_browse.setVisible(true);
        //jPanel_Tab_TabularGraphicView.setEnabled(false);
        jTabbedPaneMain.setEnabledAt(1, false);
        jTabbedPaneMain.setEnabledAt(2, false);
        jTabbedPaneMain.setEnabledAt(3, false);
        jTabbedPaneMain.setEnabledAt(4, false);
        setLocationRelativeTo(null);
    }

    private void updateFormOnFilesSelected() {
        jList_listOfFiles.setModel(filesList);
        analyseBtn.setEnabled(true);
        resetBtn.setEnabled(true);
        jPanel_listing_files.setVisible(true);
        jPanel_InputForm_buttons.setVisible(true);
        browseBtn.setEnabled(false);
        jPanel_browse.setVisible(false);
        splitPaneSplitRefresh();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel GUI_bottom_text;
    private javax.swing.JPanel GUI_main_panel;
    private javax.swing.JPanel GUI_top_panel;
    private javax.swing.JButton analyseBtn;
    private javax.swing.JButton browseBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel1Right;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel2_text;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jListLeft;
    private javax.swing.JList<String> jListRight;
    private javax.swing.JList<File> jList_listOfFiles;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel5_main;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanel_InputForm_buttons;
    private javax.swing.JPanel jPanel_browse;
    private javax.swing.JPanel jPanel_graph_executedNumberOfTimes;
    private javax.swing.JPanel jPanel_graph_timeInvocation;
    private javax.swing.JPanel jPanel_listing_files;
    private javax.swing.JPanel jPanel_tab_Anomalies;
    private javax.swing.JPanel jPanel_tab_CodeFlowGraphicalview;
    private javax.swing.JPanel jPanel_tab_MethodExecutionNumberOfTimes;
    private javax.swing.JPanel jPanel_tab_MethodTimeInvocation;
    private javax.swing.JPanel jPanel_tab_home;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPaneListRight;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPaneMain;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JButton resetBtn;
    // End of variables declaration//GEN-END:variables

}
